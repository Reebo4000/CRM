{
  "info": {
    "name": "CRM System API - Part 3 (Notifications & System)",
    "description": "Notifications, Health Monitoring, File Uploads, and Integration endpoints for CRM System",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000/api",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Notifications",
      "item": [
        {
          "name": "Get Notifications",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/notifications?page=1&limit=20&unreadOnly=false",
              "host": ["{{base_url}}"],
              "path": ["notifications"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "unreadOnly",
                  "value": "false"
                }
              ]
            },
            "description": "Get user notifications with pagination"
          }
        },
        {
          "name": "Get Unread Count",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/notifications/unread-count",
              "host": ["{{base_url}}"],
              "path": ["notifications", "unread-count"]
            },
            "description": "Get unread notification count for current user"
          }
        },
        {
          "name": "Mark Notification as Read",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{base_url}}/notifications/1/read",
              "host": ["{{base_url}}"],
              "path": ["notifications", "1", "read"]
            },
            "description": "Mark specific notification as read"
          }
        },
        {
          "name": "Mark All as Read",
          "request": {
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{base_url}}/notifications/mark-all-read",
              "host": ["{{base_url}}"],
              "path": ["notifications", "mark-all-read"]
            },
            "description": "Mark all notifications as read for current user"
          }
        },
        {
          "name": "Get Notification Preferences",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/notifications/preferences",
              "host": ["{{base_url}}"],
              "path": ["notifications", "preferences"]
            },
            "description": "Get user notification preferences"
          }
        },
        {
          "name": "Update Notification Preferences",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"preferences\": [\n    {\n      \"notificationType\": \"order_created\",\n      \"enabled\": true,\n      \"emailEnabled\": true\n    },\n    {\n      \"notificationType\": \"order_status_changed\",\n      \"enabled\": true,\n      \"emailEnabled\": false\n    },\n    {\n      \"notificationType\": \"low_stock_alert\",\n      \"enabled\": true,\n      \"emailEnabled\": true\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/notifications/preferences",
              "host": ["{{base_url}}"],
              "path": ["notifications", "preferences"]
            },
            "description": "Update user notification preferences"
          }
        },
        {
          "name": "Create Broadcast Notification (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"system_announcement\",\n  \"title\": \"System Maintenance\",\n  \"message\": \"The system will be under maintenance tonight from 2 AM to 4 AM.\",\n  \"priority\": \"high\",\n  \"data\": {\n    \"maintenanceStart\": \"2025-07-14T02:00:00Z\",\n    \"maintenanceEnd\": \"2025-07-14T04:00:00Z\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/notifications/broadcast",
              "host": ["{{base_url}}"],
              "path": ["notifications", "broadcast"]
            },
            "description": "Create broadcast notification (Admin only)"
          }
        },
        {
          "name": "Send Test Notification (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Notification\",\n  \"message\": \"This is a test notification to verify the system is working.\",\n  \"priority\": \"medium\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/notifications/test",
              "host": ["{{base_url}}"],
              "path": ["notifications", "test"]
            },
            "description": "Send test notification (Admin only)"
          }
        },
        {
          "name": "Get Notification Statistics (Admin)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/notifications/statistics?startDate=2025-01-01&endDate=2025-12-31",
              "host": ["{{base_url}}"],
              "path": ["notifications", "statistics"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2025-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2025-12-31"
                }
              ]
            },
            "description": "Get notification statistics (Admin only)"
          }
        }
      ]
    },
    {
      "name": "Health & Monitoring",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "System health check with status and metrics"
          }
        },
        {
          "name": "System Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health/metrics",
              "host": ["{{base_url}}"],
              "path": ["health", "metrics"]
            },
            "description": "Detailed system metrics (Admin only)"
          }
        },
        {
          "name": "Readiness Probe",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health/ready",
              "host": ["{{base_url}}"],
              "path": ["health", "ready"]
            },
            "description": "Readiness probe for load balancers"
          }
        },
        {
          "name": "Liveness Probe",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health/live",
              "host": ["{{base_url}}"],
              "path": ["health", "live"]
            },
            "description": "Liveness probe for container orchestration"
          }
        }
      ]
    },
    {
      "name": "File Uploads",
      "item": [
        {
          "name": "Get Uploaded File",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/uploads/example-image.jpg",
              "host": ["{{base_url}}"],
              "path": ["uploads", "example-image.jpg"]
            },
            "description": "Serve uploaded images with proper CORS headers"
          }
        }
      ]
    }
  ]
}
